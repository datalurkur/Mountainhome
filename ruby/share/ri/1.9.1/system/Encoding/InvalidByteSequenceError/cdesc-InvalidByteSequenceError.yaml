--- !ruby/object:RDoc::RI::ClassDescription 
attributes: []

class_methods: []

comment: 
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: "call-seq:"
- !ruby/struct:RDoc::Markup::Flow::VERB 
  :body: "  ecerr.incomplete_input?         -&gt; true or false\n"
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: Returns true if the invalid byte sequence error is caused by premature end of string.
- !ruby/struct:RDoc::Markup::Flow::VERB 
  :body: " ec = Encoding::Converter.new(&quot;EUC-JP&quot;, &quot;ISO-8859-1&quot;)\n\n begin\n   ec.convert(&quot;abc\\xA1z&quot;)\n rescue Encoding::InvalidByteSequenceError\n   p $!      #=&gt; #&lt;Encoding::InvalidByteSequenceError: &quot;\\xA1&quot; followed by &quot;z&quot; on EUC-JP&gt;\n   p $!.incomplete_input?    #=&gt; false\n end\n\n begin\n   ec.convert(&quot;abc\\xA1&quot;)\n   ec.finish\n rescue Encoding::InvalidByteSequenceError\n   p $!      #=&gt; #&lt;Encoding::InvalidByteSequenceError: incomplete &quot;\\xA1&quot; on EUC-JP&gt;\n   p $!.incomplete_input?    #=&gt; true\n end\n"
constants: []

full_name: Encoding::InvalidByteSequenceError
includes: []

instance_methods: 
- !ruby/object:RDoc::RI::MethodSummary 
  name: destination_encoding
- !ruby/object:RDoc::RI::MethodSummary 
  name: destination_encoding_name
- !ruby/object:RDoc::RI::MethodSummary 
  name: error_bytes
- !ruby/object:RDoc::RI::MethodSummary 
  name: incomplete_input?
- !ruby/object:RDoc::RI::MethodSummary 
  name: readagain_bytes
- !ruby/object:RDoc::RI::MethodSummary 
  name: source_encoding
- !ruby/object:RDoc::RI::MethodSummary 
  name: source_encoding_name
name: InvalidByteSequenceError
superclass: rb_eEncodingError
