--- !ruby/object:RDoc::RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: Returns a conversion path.
- !ruby/struct:RDoc::Markup::Flow::VERB 
  :body: " p Encoding::Converter.search_convpath(&quot;ISO-8859-1&quot;, &quot;EUC-JP&quot;)\n #=&gt; [[#&lt;Encoding:ISO-8859-1&gt;, #&lt;Encoding:UTF-8&gt;],\n #    [#&lt;Encoding:UTF-8&gt;, #&lt;Encoding:EUC-JP&gt;]]\n\n p Encoding::Converter.search_convpath(&quot;ISO-8859-1&quot;, &quot;EUC-JP&quot;, universal_newline: true)\n #=&gt; [[#&lt;Encoding:ISO-8859-1&gt;, #&lt;Encoding:UTF-8&gt;],\n #    [#&lt;Encoding:UTF-8&gt;, #&lt;Encoding:EUC-JP&gt;],\n #    &quot;universal_newline&quot;]\n\n p Encoding::Converter.search_convpath(&quot;ISO-8859-1&quot;, &quot;UTF-32BE&quot;, universal_newline: true)\n #=&gt; [[#&lt;Encoding:ISO-8859-1&gt;, #&lt;Encoding:UTF-8&gt;],\n #    &quot;universal_newline&quot;,\n #    [#&lt;Encoding:UTF-8&gt;, #&lt;Encoding:UTF-32BE&gt;]]\n"
full_name: Encoding::Converter::search_convpath
is_singleton: true
name: search_convpath
params: |
  Encoding::Converter.search_convpath(source_encoding, destination_encoding)         -> ary
  Encoding::Converter.search_convpath(source_encoding, destination_encoding, opt)    -> ary

visibility: public
