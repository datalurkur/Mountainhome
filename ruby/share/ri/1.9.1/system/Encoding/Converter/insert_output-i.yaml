--- !ruby/object:RDoc::RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: Inserts string into the encoding converter. The string will be converted to the destination encoding and output on later conversions.
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: If the destination encoding is stateful, string is converted according to the state and the state is updated.
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: This method should be used only when a conversion error occurs.
- !ruby/struct:RDoc::Markup::Flow::VERB 
  :body: " ec = Encoding::Converter.new(&quot;utf-8&quot;, &quot;iso-8859-1&quot;)\n src = &quot;HIRAGANA LETTER A is \\u{3042}.&quot;\n dst = &quot;&quot;\n p ec.primitive_convert(src, dst)    #=&gt; :undefined_conversion\n puts &quot;[#{dst.dump}, #{src.dump}]&quot;   #=&gt; [&quot;HIRAGANA LETTER A is &quot;, &quot;.&quot;]\n ec.insert_output(&quot;&lt;err&gt;&quot;)\n p ec.primitive_convert(src, dst)    #=&gt; :finished\n puts &quot;[#{dst.dump}, #{src.dump}]&quot;   #=&gt; [&quot;HIRAGANA LETTER A is &lt;err&gt;.&quot;, &quot;&quot;]\n\n ec = Encoding::Converter.new(&quot;utf-8&quot;, &quot;iso-2022-jp&quot;)\n src = &quot;\\u{306F 3041 3068 2661 3002}&quot; # U+2661 is not representable in iso-2022-jp\n dst = &quot;&quot;\n p ec.primitive_convert(src, dst)    #=&gt; :undefined_conversion\n puts &quot;[#{dst.dump}, #{src.dump}]&quot;   #=&gt; [&quot;\\e$B$O$!$H&quot;.force_encoding(&quot;ISO-2022-JP&quot;), &quot;\\xE3\\x80\\x82&quot;]\n ec.insert_output &quot;?&quot;                # state change required to output &quot;?&quot;.\n p ec.primitive_convert(src, dst)    #=&gt; :finished\n puts &quot;[#{dst.dump}, #{src.dump}]&quot;   #=&gt; [&quot;\\e$B$O$!$H\\e(B?\\e$B!#\\e(B&quot;.force_encoding(&quot;ISO-2022-JP&quot;), &quot;&quot;]\n"
full_name: Encoding::Converter#insert_output
is_singleton: false
name: insert_output
params: |
  ec.insert_output(string) -> nil

visibility: public
