--- !ruby/object:RDoc::RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: Returns the locale charmap name.
- !ruby/struct:RDoc::Markup::Flow::VERB 
  :body: "  Debian GNU/Linux\n    LANG=C\n      Encoding.locale_charmap  =&gt; &quot;ANSI_X3.4-1968&quot;\n    LANG=ja_JP.EUC-JP\n      Encoding.locale_charmap  =&gt; &quot;EUC-JP&quot;\n\n  SunOS 5\n    LANG=C\n      Encoding.locale_charmap  =&gt; &quot;646&quot;\n    LANG=ja\n      Encoding.locale_charmap  =&gt; &quot;eucJP&quot;\n"
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: The result is higly platform dependent. So Encoding.find(Encoding.locale_charmap) may cause an error. If you need some encoding object even for unknown locale, Encoding.find(&quot;locale&quot;) can be used.
full_name: Encoding::locale_charmap
is_singleton: true
name: locale_charmap
params: |
  Encoding.locale_charmap => string

visibility: public
