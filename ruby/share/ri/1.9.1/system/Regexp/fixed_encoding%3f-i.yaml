--- !ruby/object:RDoc::RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: Returns false if rxp is applicable to a string with any ASCII compatible encoding. Returns true otherwise.
- !ruby/struct:RDoc::Markup::Flow::VERB 
  :body: "    r = /a/\n    r.fixed_encoding?                               #=&gt; false\n    r =~ &quot;\\u{6666} a&quot;                               #=&gt; 2\n    r =~ &quot;\\xa1\\xa2 a&quot;.force_encoding(&quot;euc-jp&quot;)      #=&gt; 2\n    r =~ &quot;abc&quot;.force_encoding(&quot;euc-jp&quot;)             #=&gt; 0\n\n    r = /a/u\n    r.fixed_encoding?                               #=&gt; true\n    r.encoding                                      #=&gt; #&lt;Encoding:UTF-8&gt;\n    r =~ &quot;\\u{6666} a&quot;                               #=&gt; 2\n    r =~ &quot;\\xa1\\xa2&quot;.force_encoding(&quot;euc-jp&quot;)        #=&gt; ArgumentError\n    r =~ &quot;abc&quot;.force_encoding(&quot;euc-jp&quot;)             #=&gt; 0\n\n    r = /\\u{6666}/\n    r.fixed_encoding?                               #=&gt; true\n    r.encoding                                      #=&gt; #&lt;Encoding:UTF-8&gt;\n    r =~ &quot;\\u{6666} a&quot;                               #=&gt; 0\n    r =~ &quot;\\xa1\\xa2&quot;.force_encoding(&quot;euc-jp&quot;)        #=&gt; ArgumentError\n    r =~ &quot;abc&quot;.force_encoding(&quot;euc-jp&quot;)             #=&gt; nil\n"
full_name: Regexp#fixed_encoding?
is_singleton: false
name: fixed_encoding?
params: |
  rxp.fixed_encoding?   => true or false

visibility: public
