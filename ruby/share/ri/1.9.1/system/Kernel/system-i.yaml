--- !ruby/object:RDoc::RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: Executes <em>cmd</em> in a subshell, returning <tt>true</tt> if the command gives zero exit status, <tt>false</tt> for non zero exit status. Returns <tt>nil</tt> if command execution fails. An error status is available in <tt>$?</tt>. The arguments are processed in the same way as for <tt>Kernel::exec</tt>.
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: The hash arguments, env and options, are same as <tt>exec</tt> and <tt>spawn</tt>. See <tt>spawn</tt> for details.
- !ruby/struct:RDoc::Markup::Flow::VERB 
  :body: "   system(&quot;echo *&quot;)\n   system(&quot;echo&quot;, &quot;*&quot;)\n"
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: <em>produces:</em>
- !ruby/struct:RDoc::Markup::Flow::VERB 
  :body: "   config.h main.rb\n   *\n"
full_name: Kernel#system
is_singleton: false
name: system
params: |
  system([env,] cmd [, arg, ...] [,options])    => true, false or nil

visibility: public
