--- !ruby/object:RDoc::RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: Replaces the current process by running the given external <em>command</em>. If optional arguments, sequence of <tt>arg</tt>, are not given, that argument is taken as a line that is subject to shell expansion before being executed. If one or more <tt>arg</tt> given, they are passed as parameters to <em>command</em> with no shell expansion. If <tt>command</tt> is a two-element array, the first element is the command to be executed, and the second argument is used as the <tt>argv[0]</tt> value, which may show up in process listings. In order to execute the command, one of the <tt>exec(2)</tt> system calls is used, so the running command may inherit some of the environment of the original program (including open file descriptors).
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: The hash arguments, env and options, are same as <tt>system</tt> and <tt>spawn</tt>. See <tt>spawn</tt> for details.
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: Raises SystemCallError if the <em>command</em> couldn't execute (typically <tt>Errno::ENOENT</tt> when it was not found).
- !ruby/struct:RDoc::Markup::Flow::VERB 
  :body: "   exec &quot;echo *&quot;       # echoes list of files in current directory\n   # never get here\n\n   exec &quot;echo&quot;, &quot;*&quot;    # echoes an asterisk\n   # never get here\n"
full_name: Kernel#exec
is_singleton: false
name: exec
params: |
  exec([env,] command [, arg, ...] [,options])

visibility: public
