--- !ruby/object:RDoc::RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: Creates a new Net::IMAP object and connects it to the specified <tt>host</tt>.
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: <tt>options</tt> is an option hash, each key of which is a symbol.
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: "The available options are:"
- !ruby/object:RDoc::Markup::Flow::LIST 
  contents: 
  - !ruby/struct:RDoc::Markup::Flow::LI 
    :label: "port:"
    :body: port number (default value is 143 for imap, or 993 for imaps)
  - !ruby/struct:RDoc::Markup::Flow::LI 
    :label: "ssl:"
    :body: if options[:ssl] is true, then an attempt will be made to use SSL (now TLS) to connect to the server. For this to work OpenSSL [OSSL] and the Ruby OpenSSL [RSSL] extensions need to be installed. if options[:ssl] is a hash, it's passed to OpenSSL::SSL::SSLContext#set_params as parameters.
  type: :NOTE
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: "The most common errors are:"
- !ruby/object:RDoc::Markup::Flow::LIST 
  contents: 
  - !ruby/struct:RDoc::Markup::Flow::LI 
    :label: "Errno::ECONNREFUSED:"
    :body: connection refused by <tt>host</tt> or an intervening firewall.
  - !ruby/struct:RDoc::Markup::Flow::LI 
    :label: "Errno::ETIMEDOUT:"
    :body: connection timed out (possibly due to packets being dropped by an intervening firewall).
  - !ruby/struct:RDoc::Markup::Flow::LI 
    :label: "Errno::ENETUNREACH:"
    :body: there is no route to that network.
  - !ruby/struct:RDoc::Markup::Flow::LI 
    :label: "SocketError:"
    :body: hostname not known or other socket error.
  - !ruby/struct:RDoc::Markup::Flow::LI 
    :label: "Net::IMAP::ByeResponseError:"
    :body: we connected to the host, but they immediately said goodbye to us.
  type: :NOTE
full_name: Net::IMAP::new
is_singleton: true
name: new
params: |
  Net::IMAP.new(host, options = {})

visibility: public
