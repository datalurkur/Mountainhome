--- !ruby/object:RDoc::RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: Divides by the specified value, and returns the quotient and modulus as BigDecimal numbers. The quotient is rounded towards negative infinity.
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: "For example:"
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: require 'bigdecimal'
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: a = BigDecimal.new(&quot;42&quot;) b = BigDecimal.new(&quot;9&quot;)
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: q,m = a.divmod(b)
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: c = q * b + m
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: a == c -&gt; true
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: The quotient q is (a/b).floor, and the modulus is the amount that must be added to q * b to get a.
full_name: BigDecimal#divmod
is_singleton: false
name: divmod
params: (p1)
visibility: public
