--- !ruby/object:RDoc::RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: Converts the value to a string.
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: The default format looks like 0.xxxxEnn.
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: The optional parameter s consists of either an integer; or an optional '+' or ' ', followed by an optional number, followed by an optional 'E' or 'F'.
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: If there is a '+' at the start of s, positive values are returned with a leading '+'.
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: A space at the start of s returns positive values with a leading space.
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: If s contains a number, a space is inserted after each group of that many fractional digits.
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: If s ends with an 'E', engineering notation (0.xxxxEnn) is used.
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: If s ends with an 'F', conventional floating point notation is used.
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: "Examples:"
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: BigDecimal.new('-123.45678901234567890').to_s('5F') -&gt; '-123.45678 90123 45678 9'
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: BigDecimal.new('123.45678901234567890').to_s('+8F') -&gt; '+123.45678901 23456789'
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: BigDecimal.new('123.45678901234567890').to_s(' F') -&gt; ' 123.4567890123456789'
full_name: BigDecimal#to_s
is_singleton: false
name: to_s
params: |
  to_s(s)

visibility: public
