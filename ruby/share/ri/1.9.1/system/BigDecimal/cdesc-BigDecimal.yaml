--- !ruby/object:RDoc::RI::ClassDescription 
attributes: []

class_methods: 
- !ruby/object:RDoc::RI::MethodSummary 
  name: _load
- !ruby/object:RDoc::RI::MethodSummary 
  name: double_fig
- !ruby/object:RDoc::RI::MethodSummary 
  name: limit
- !ruby/object:RDoc::RI::MethodSummary 
  name: mode
- !ruby/object:RDoc::RI::MethodSummary 
  name: new
- !ruby/object:RDoc::RI::MethodSummary 
  name: ver
comment: 
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: Class and method registration
constants: 
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    :body: Base value used in internal calculations. On a 32 bit system, BASE is 10000, indicating that calculation is done in groups of 4 digits. (If it were larger, BASE**2 wouldn't fit in 32 bits, so you couldn't guarantee that two groups could always be multiplied together without overflow.)
  name: BASE
  value: INT2FIX((S_INT)VpBaseVal())
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    :body: Determines whether overflow, underflow or zero divide result in an exception being thrown. See BigDecimal.mode.
  name: EXCEPTION_ALL
  value: "0xff"
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    :body: Determines what happens when the result of a computation is not a number (NaN). See BigDecimal.mode.
  name: EXCEPTION_NaN
  value: "0x02"
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    :body: Determines what happens when the result of a computation is infinity. See BigDecimal.mode.
  name: EXCEPTION_INFINITY
  value: "0x01"
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    :body: Determines what happens when the result of a computation is an underflow (a result too small to be represented). See BigDecimal.mode.
  name: EXCEPTION_UNDERFLOW
  value: "0x04"
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    :body: Determines what happens when the result of a computation is an overflow (a result too large to be represented). See BigDecimal.mode.
  name: EXCEPTION_OVERFLOW
  value: "0x01"
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    :body: Determines what happens when a division by zero is performed. See BigDecimal.mode.
  name: EXCEPTION_ZERODIVIDE
  value: "0x01"
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    :body: Determines what happens when a result must be rounded in order to fit in the appropriate number of significant digits. See BigDecimal.mode.
  name: ROUND_MODE
  value: "0x100"
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    :body: Indicates that values should be rounded away from zero. See BigDecimal.mode.
  name: ROUND_UP
  value: "1"
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    :body: Indicates that values should be rounded towards zero. See BigDecimal.mode.
  name: ROUND_DOWN
  value: "2"
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    :body: Indicates that digits &gt;= 5 should be rounded up, others rounded down. See BigDecimal.mode.
  name: ROUND_HALF_UP
  value: "3"
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    :body: Indicates that digits &gt;= 6 should be rounded up, others rounded down. See BigDecimal.mode.
  name: ROUND_HALF_DOWN
  value: "4"
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    :body: Round towards +infinity. See BigDecimal.mode.
  name: ROUND_CEILING
  value: "5"
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    :body: Round towards -infinity. See BigDecimal.mode.
  name: ROUND_FLOOR
  value: "6"
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    :body: Round towards the even neighbor. See BigDecimal.mode.
  name: ROUND_HALF_EVEN
  value: "7"
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    :body: Indicates that a value is not a number. See BigDecimal.sign.
  name: SIGN_NaN
  value: "0"
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    :body: Indicates that a value is +0. See BigDecimal.sign.
  name: SIGN_POSITIVE_ZERO
  value: "1"
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    :body: Indicates that a value is -0. See BigDecimal.sign.
  name: SIGN_NEGATIVE_ZERO
  value: "-1"
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    :body: Indicates that a value is positive and finite. See BigDecimal.sign.
  name: SIGN_POSITIVE_FINITE
  value: "2"
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    :body: Indicates that a value is negative and finite. See BigDecimal.sign.
  name: SIGN_NEGATIVE_FINITE
  value: "-2"
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    :body: Indicates that a value is positive and infinite. See BigDecimal.sign.
  name: SIGN_POSITIVE_INFINITE
  value: "3"
- !ruby/object:RDoc::RI::Constant 
  comment: 
  - !ruby/struct:RDoc::Markup::Flow::P 
    :body: Indicates that a value is negative and infinite. See BigDecimal.sign.
  name: SIGN_NEGATIVE_INFINITE
  value: "-3"
full_name: BigDecimal
includes: []

instance_methods: 
- !ruby/object:RDoc::RI::MethodSummary 
  name: "%"
- !ruby/object:RDoc::RI::MethodSummary 
  name: "*"
- !ruby/object:RDoc::RI::MethodSummary 
  name: "**"
- !ruby/object:RDoc::RI::MethodSummary 
  name: +
- !ruby/object:RDoc::RI::MethodSummary 
  name: "-"
- !ruby/object:RDoc::RI::MethodSummary 
  name: /
- !ruby/object:RDoc::RI::MethodSummary 
  name: <
- !ruby/object:RDoc::RI::MethodSummary 
  name: <=
- !ruby/object:RDoc::RI::MethodSummary 
  name: <=>
- !ruby/object:RDoc::RI::MethodSummary 
  name: ==
- !ruby/object:RDoc::RI::MethodSummary 
  name: ===
- !ruby/object:RDoc::RI::MethodSummary 
  name: ">"
- !ruby/object:RDoc::RI::MethodSummary 
  name: ">="
- !ruby/object:RDoc::RI::MethodSummary 
  name: abs
- !ruby/object:RDoc::RI::MethodSummary 
  name: ceil
- !ruby/object:RDoc::RI::MethodSummary 
  name: coerce
- !ruby/object:RDoc::RI::MethodSummary 
  name: divmod
- !ruby/object:RDoc::RI::MethodSummary 
  name: eql?
- !ruby/object:RDoc::RI::MethodSummary 
  name: exponent
- !ruby/object:RDoc::RI::MethodSummary 
  name: finite?
- !ruby/object:RDoc::RI::MethodSummary 
  name: fix
- !ruby/object:RDoc::RI::MethodSummary 
  name: floor
- !ruby/object:RDoc::RI::MethodSummary 
  name: frac
- !ruby/object:RDoc::RI::MethodSummary 
  name: infinite?
- !ruby/object:RDoc::RI::MethodSummary 
  name: inspect
- !ruby/object:RDoc::RI::MethodSummary 
  name: modulo
- !ruby/object:RDoc::RI::MethodSummary 
  name: nan?
- !ruby/object:RDoc::RI::MethodSummary 
  name: nonzero?
- !ruby/object:RDoc::RI::MethodSummary 
  name: power
- !ruby/object:RDoc::RI::MethodSummary 
  name: precs
- !ruby/object:RDoc::RI::MethodSummary 
  name: quo
- !ruby/object:RDoc::RI::MethodSummary 
  name: remainder
- !ruby/object:RDoc::RI::MethodSummary 
  name: round
- !ruby/object:RDoc::RI::MethodSummary 
  name: sign
- !ruby/object:RDoc::RI::MethodSummary 
  name: split
- !ruby/object:RDoc::RI::MethodSummary 
  name: sqrt
- !ruby/object:RDoc::RI::MethodSummary 
  name: to_digits
- !ruby/object:RDoc::RI::MethodSummary 
  name: to_f
- !ruby/object:RDoc::RI::MethodSummary 
  name: to_i
- !ruby/object:RDoc::RI::MethodSummary 
  name: to_int
- !ruby/object:RDoc::RI::MethodSummary 
  name: to_r
- !ruby/object:RDoc::RI::MethodSummary 
  name: to_s
- !ruby/object:RDoc::RI::MethodSummary 
  name: truncate
- !ruby/object:RDoc::RI::MethodSummary 
  name: zero?
name: BigDecimal
superclass: Numeric
