--- !ruby/object:RDoc::RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: Transfer control to another fiber, resuming it from where it last stopped or starting it if it was not resumed before. The calling fiber will be suspended much like in a call to <tt>Fiber.yield</tt>.
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: The fiber which recieves the transfer call is treats it much like a resume call. Arguments passed to transfer are treated like those passed to resume.
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: You cannot resume a fiber that transferred control to another one. This will cause a double resume error. You need to transfer control back to this fiber before it can yield and resume.
full_name: Fiber#transfer
is_singleton: false
name: transfer
params: |
  fiber.transfer(args, ...) -> obj

visibility: public
