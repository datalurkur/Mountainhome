--- !ruby/object:RDoc::RI::ModuleDescription 
attributes: []

class_methods: 
- !ruby/object:RDoc::RI::MethodSummary 
  name: popen3
comment: 
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: Open3 grants you access to stdin, stdout, stderr and a thread to wait the child process when running another program.
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: "Example:"
- !ruby/struct:RDoc::Markup::Flow::VERB 
  :body: "  require &quot;open3&quot;\n  include Open3\n\n  stdin, stdout, stderr, wait_thr = popen3('nroff -man')\n"
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: Open3.popen3 can also take a block which will receive stdin, stdout, stderr and wait_thr as parameters. This ensures stdin, stdout and stderr are closed and the process is terminated once the block exits.
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: "Example:"
- !ruby/struct:RDoc::Markup::Flow::VERB 
  :body: "  require &quot;open3&quot;\n\n  Open3.popen3('nroff -man') { |stdin, stdout, stderr, wait_thr| ... }\n"
constants: []

full_name: Open3
includes: []

instance_methods: 
- !ruby/object:RDoc::RI::MethodSummary 
  name: popen3
name: Open3
