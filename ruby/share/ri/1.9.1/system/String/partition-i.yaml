--- !ruby/object:RDoc::RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: Searches <em>sep</em> or pattern (<em>regexp</em>) in the string and returns the part before it, the match, and the part after it. If it is not found, returns two empty strings and <em>str</em>.
- !ruby/struct:RDoc::Markup::Flow::VERB 
  :body: "   &quot;hello&quot;.partition(&quot;l&quot;)         #=&gt; [&quot;he&quot;, &quot;l&quot;, &quot;lo&quot;]\n   &quot;hello&quot;.partition(&quot;x&quot;)         #=&gt; [&quot;hello&quot;, &quot;&quot;, &quot;&quot;]\n   &quot;hello&quot;.partition(/.l/)        #=&gt; [&quot;h&quot;, &quot;el&quot;, &quot;lo&quot;]\n"
full_name: String#partition
is_singleton: false
name: partition
params: |
  str.partition(sep)              => [head, sep, tail]
  str.partition(regexp)           => [head, match, tail]

visibility: public
