--- !ruby/object:RDoc::RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:RDoc::Markup::Flow::H 
  :level: 2
  :text: Synopsis
- !ruby/struct:RDoc::Markup::Flow::VERB 
  :body: "  URI::regexp([match_schemes])\n"
- !ruby/struct:RDoc::Markup::Flow::H 
  :level: 2
  :text: Args
- !ruby/object:RDoc::Markup::Flow::LIST 
  contents: 
  - !ruby/struct:RDoc::Markup::Flow::LI 
    :label: "+match_schemes+:"
    :body: Array of schemes. If given, resulting regexp matches to URIs whose scheme is one of the match_schemes.
  type: :NOTE
- !ruby/struct:RDoc::Markup::Flow::H 
  :level: 2
  :text: Description
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: Returns a Regexp object which matches to URI-like strings. The Regexp object returned by this method includes arbitrary number of capture group (parentheses). Never rely on it's number.
- !ruby/struct:RDoc::Markup::Flow::H 
  :level: 2
  :text: Usage
- !ruby/struct:RDoc::Markup::Flow::VERB 
  :body: "  require 'uri'\n\n  # extract first URI from html_string\n  html_string.slice(URI.regexp)\n\n  # remove ftp URIs\n  html_string.sub(URI.regexp(['ftp'])\n\n  # You should not rely on the number of parentheses\n  html_string.scan(URI.regexp) do |*matches|\n    p $&amp;\n  end\n"
full_name: URI::regexp
is_singleton: true
name: regexp
params: (schemes = nil)
visibility: public
