--- !ruby/object:RDoc::RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: Calculates the gamma function of x.
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: Note that gamma(n) is same as fact(n-1) for integer n &gt;= 0. However gamma(n) returns float and possibly has error in calculation.
- !ruby/struct:RDoc::Markup::Flow::VERB 
  :body: " def fact(n) (1..n).inject(1) {|r,i| r*i } end\n 0.upto(25) {|i| p [i, Math.gamma(i+1), fact(i)] }\n #=&gt;\n [0, 1.0, 1]\n [1, 1.0, 1]\n [2, 2.0, 2]\n [3, 6.0, 6]\n [4, 24.0, 24]\n [5, 120.0, 120]\n [6, 720.0, 720]\n [7, 5040.0, 5040]\n [8, 40320.0, 40320]\n [9, 362880.0, 362880]\n [10, 3628800.0, 3628800]\n [11, 39916800.0, 39916800]\n [12, 479001599.999999, 479001600]\n [13, 6227020800.00001, 6227020800]\n [14, 87178291199.9998, 87178291200]\n [15, 1307674368000.0, 1307674368000]\n [16, 20922789888000.0, 20922789888000]\n [17, 3.55687428096001e+14, 355687428096000]\n [18, 6.40237370572799e+15, 6402373705728000]\n [19, 1.21645100408832e+17, 121645100408832000]\n [20, 2.43290200817664e+18, 2432902008176640000]\n [21, 5.10909421717094e+19, 51090942171709440000]\n [22, 1.12400072777761e+21, 1124000727777607680000]\n [23, 2.58520167388851e+22, 25852016738884976640000]\n [24, 6.20448401733239e+23, 620448401733239439360000]\n [25, 1.5511210043331e+25, 15511210043330985984000000]\n"
full_name: Math::gamma
is_singleton: true
name: gamma
params: |
  Math.gamma(x)  => float

visibility: public
