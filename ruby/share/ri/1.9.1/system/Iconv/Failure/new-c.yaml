--- !ruby/object:RDoc::RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: Creates new code converter from a coding-system designated with <tt>from</tt> to another one designated with <tt>to</tt>.
- !ruby/struct:RDoc::Markup::Flow::H 
  :level: 3
  :text: Parameters
- !ruby/object:RDoc::Markup::Flow::LIST 
  contents: 
  - !ruby/struct:RDoc::Markup::Flow::LI 
    :label: "+to+:"
    :body: encoding name for destination
  - !ruby/struct:RDoc::Markup::Flow::LI 
    :label: "+from+:"
    :body: encoding name for source
  - !ruby/struct:RDoc::Markup::Flow::LI 
    :label: "+options+:"
    :body: options for converter
  type: :NOTE
- !ruby/struct:RDoc::Markup::Flow::H 
  :level: 3
  :text: Exceptions
- !ruby/object:RDoc::Markup::Flow::LIST 
  contents: 
  - !ruby/struct:RDoc::Markup::Flow::LI 
    :label: "TypeError:"
    :body: if <tt>to</tt> or <tt>from</tt> aren't String
  - !ruby/struct:RDoc::Markup::Flow::LI 
    :label: "InvalidEncoding:"
    :body: if designated converter couldn't find out
  - !ruby/struct:RDoc::Markup::Flow::LI 
    :label: "SystemCallError:"
    :body: if <tt>iconv_open(3)</tt> fails
  type: :NOTE
full_name: Iconv::Failure::new
is_singleton: true
name: new
params: " Iconv.new(to, from, [options])\n"
visibility: public
