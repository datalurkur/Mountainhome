--- !ruby/object:RDoc::RI::MethodDescription 
aliases: 
- !ruby/object:RDoc::RI::AliasName 
  name: symlink
block_params: 
comment: 
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: "Options: force noop verbose"
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: <b><tt>ln_s(old, new, options = {})</tt></b>
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: Creates a symbolic link <tt>new</tt> which points to <tt>old</tt>. If <tt>new</tt> already exists and it is a directory, creates a symbolic link <tt>new/old</tt>. If <tt>new</tt> already exists and it is not a directory, raises Errno::EEXIST. But if :force option is set, overwrite <tt>new</tt>.
- !ruby/struct:RDoc::Markup::Flow::VERB 
  :body: "  FileUtils.ln_s '/usr/bin/ruby', '/usr/local/bin/ruby'\n  FileUtils.ln_s 'verylongsourcefilename.c', 'c', :force =&gt; true\n"
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: <b><tt>ln_s(list, destdir, options = {})</tt></b>
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: Creates several symbolic links in a directory, with each one pointing to the item in <tt>list</tt>. If <tt>destdir</tt> is not a directory, raises Errno::ENOTDIR.
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: If <tt>destdir</tt> is not a directory, raises Errno::ENOTDIR.
- !ruby/struct:RDoc::Markup::Flow::VERB 
  :body: "  FileUtils.ln_s Dir.glob('bin/*.rb'), '/home/aamine/bin'\n"
full_name: FileUtils::ln_s
is_singleton: true
name: ln_s
params: (src, dest, options = {})
visibility: public
