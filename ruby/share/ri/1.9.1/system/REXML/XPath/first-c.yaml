--- !ruby/object:RDoc::RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: Finds and returns the first node that matches the supplied xpath.
- !ruby/object:RDoc::Markup::Flow::LIST 
  contents: 
  - !ruby/struct:RDoc::Markup::Flow::LI 
    :label: "element:"
    :body: The context element
  - !ruby/struct:RDoc::Markup::Flow::LI 
    :label: "path:"
    :body: The xpath to search for. If not supplied or nil, returns the first node matching '*'.
  - !ruby/struct:RDoc::Markup::Flow::LI 
    :label: "namespaces:"
    :body: If supplied, a Hash which defines a namespace mapping.
  - !ruby/struct:RDoc::Markup::Flow::LI 
    :label: "variables:"
    :body: If supplied, a Hash which maps $variables in the query to values. This can be used to avoid XPath injection attacks or to automatically handle escaping string values.
  type: :NOTE
- !ruby/struct:RDoc::Markup::Flow::VERB 
  :body: " XPath.first( node )\n XPath.first( doc, &quot;//b&quot;} )\n XPath.first( node, &quot;a/x:b&quot;, { &quot;x&quot;=&gt;&quot;http://doofus&quot; } )\n XPath.first( node, '/book/publisher/text()=$publisher', {}, {&quot;publisher&quot;=&gt;&quot;O'Reilly&quot;})\n"
full_name: REXML::XPath::first
is_singleton: true
name: first
params: (element, path=nil, namespaces=nil, variables={})
visibility: public
