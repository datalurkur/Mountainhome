--- !ruby/object:RDoc::RI::ModuleDescription 
attributes: []

class_methods: []

comment: 
- !ruby/struct:RDoc::Markup::Flow::VERB 
  :body: "    Ruby exception objects are subclasses of <tt>Exception</tt>.\n    However, operating systems typically report errors using plain\n    integers. Module <tt>Errno</tt> is created dynamically to map\n    these operating system errors to Ruby classes, with each error\n    number generating its own subclass of <tt>SystemCallError</tt>.\n    As the subclass is created in module <tt>Errno</tt>, its name\n    will start <tt>Errno::</tt>.\n\n    The names of the <tt>Errno::</tt> classes depend on\n    the environment in which Ruby runs. On a typical Unix or Windows\n    platform, there are <tt>Errno</tt> classes such as\n    <tt>Errno::EACCES</tt>, <tt>Errno::EAGAIN</tt>,\n    <tt>Errno::EINTR</tt>, and so on.\n\n    The integer operating system error number corresponding to a\n    particular error is available as the class constant\n    <tt>Errno::</tt><em>error</em><tt>::Errno</tt>.\n\n       Errno::EACCES::Errno   #=&gt; 13\n       Errno::EAGAIN::Errno   #=&gt; 11\n       Errno::EINTR::Errno    #=&gt; 4\n\n    The full list of operating system errors on your particular platform\n    are available as the constants of <tt>Errno</tt>.\n\n       Errno.constants   #=&gt; :E2BIG, :EACCES, :EADDRINUSE, :EADDRNOTAVAIL, ...\n   # ---\n"
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: "# # compat.rb -- cross platform compatibility # # Author: IPR -- Internet Programming with Ruby -- writers # Copyright (c) 2002 GOTOU Yuuzou # Copyright (c) 2002 Internet Programming with Ruby writers. All rights # reserved. # # $IPR: compat.rb,v 1.6 2002/10/01 17:16:32 gotoyuzo Exp $"
constants: []

full_name: Errno
includes: []

instance_methods: []

name: Errno
