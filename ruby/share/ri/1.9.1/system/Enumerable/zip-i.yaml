--- !ruby/object:RDoc::RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:RDoc::Markup::Flow::P 
  :body: Takes one element from <em>enum</em> and merges corresponding elements from each <em>args</em>. This generates a sequence of <em>n</em>-element arrays, where <em>n</em> is one more than the count of arguments. The length of the resulting sequence will be <tt>enum#size&lt;/code. If the size of any argument is less than &lt;code&gt;enum#size</tt>, <tt>nil</tt> values are supplied. If a block is given, it is invoked for each output array, otherwise an array of arrays is returned.
- !ruby/struct:RDoc::Markup::Flow::VERB 
  :body: "   a = [ 4, 5, 6 ]\n   b = [ 7, 8, 9 ]\n\n   [1,2,3].zip(a, b)      #=&gt; [[1, 4, 7], [2, 5, 8], [3, 6, 9]]\n   [1,2].zip(a,b)         #=&gt; [[1, 4, 7], [2, 5, 8]]\n   a.zip([1,2],[8])       #=&gt; [[4, 1, 8], [5, 2, nil], [6, nil, nil]]\n"
full_name: Enumerable#zip
is_singleton: false
name: zip
params: |
  enum.zip(arg, ...)                   => enumerator
  enum.zip(arg, ...) {|arr| block }    => nil

visibility: public
