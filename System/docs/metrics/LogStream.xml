<?xml version="1.0" encoding="utf-8"?>
<!--Detailed report on module LogStream-->
<CCCC_Project>
<module_summary>
<lines_of_code value="289" level="0" />
<lines_of_code_per_member_function value="******" level="0" />
<McCabes_cyclomatic_complexity value="24" level="0" />
<McCabes_cyclomatic_complexity_per_member_function value="******" level="2" />
<lines_of_code value="154" level="0" />
<lines_of_code_per_member_function value="********" level="2" />
<lines_of_code_per_line_of_comment value="1.877" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="0.156" level="0" />
<weighted_methods_per_class_unity value="27" level="0" />
<weighted_methods_per_class_visibility value="13" level="0" />
<depth_of_inheritance_tree value="0" level="0" />
<number_of_children value="0" level="0" />
<coupling_between_objects value="2" level="0" />
<IF4 value="0" level="0" />
<IF4_per_member_function value="********" level="0" />
<IF4_visible value="0" level="0" />
<IF4_visible_per_member_function value="********" level="0" />
<IF4_concrete value="0" level="0" />
<IF4_concrete_per_member_function value="********" level="0" />
</module_summary>
<module_detail>
<description>definition</description>
<source_reference file="CPPLogger.h" line="69" />
<lines_of_code value="30" level="0" />
<McCabes_cyclomatic_complexity value="2" level="0" />
<lines_of_comment value="89" level="0" />
<lines_of_code_per_line_of_comment value="0.337" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</module_detail>
<procedural_detail>
<member_function>
<name>AppendTimeString(string &amp;)</name>
<extent>
<description>definition</description>
<source_reference file="CPPLogger.cpp" line="328" />
</extent>
<lines_of_code value="3" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>CheckResult(char *)</name>
<extent>
<description>definition</description>
<source_reference file="CPPLogger.cpp" line="340" />
</extent>
<lines_of_code value="8" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="1" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>ClearLogFile()</name>
<extent>
<description>definition</description>
<source_reference file="CPPLogger.cpp" line="54" />
</extent>
<extent>
<description>declaration</description>
<source_reference file="CPPLogger.h" line="125" />
</extent>
<lines_of_code value="5" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="1" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>DecrementIndent(int)</name>
<extent>
<description>definition</description>
<source_reference file="CPPLogger.cpp" line="30" />
</extent>
<extent>
<description>declaration</description>
<source_reference file="CPPLogger.h" line="100" />
</extent>
<lines_of_code value="4" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="3" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>GetAbortOnError()</name>
<extent>
<description>definition</description>
<source_reference file="CPPLogger.cpp" line="151" />
</extent>
<extent>
<description>declaration</description>
<source_reference file="CPPLogger.h" line="129" />
</extent>
<lines_of_code value="4" level="0" />
<McCabes_cyclomatic_complexity value="1" level="0" />
<lines_of_comment value="2" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>IncrementIndent(int)</name>
<extent>
<description>definition</description>
<source_reference file="CPPLogger.cpp" line="26" />
</extent>
<extent>
<description>declaration</description>
<source_reference file="CPPLogger.h" line="95" />
</extent>
<lines_of_code value="4" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="3" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>LogStream(LogType,bool,const string &amp;,int)</name>
<extent>
<description>definition</description>
<source_reference file="CPPLogger.cpp" line="59" />
</extent>
<extent>
<description>declaration</description>
<source_reference file="CPPLogger.h" line="141" />
</extent>
<lines_of_code value="16" level="0" />
<McCabes_cyclomatic_complexity value="2" level="0" />
<lines_of_comment value="5" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>PrintAndCheckResult(char *,LogType)</name>
<extent>
<description>definition</description>
<source_reference file="CPPLogger.cpp" line="332" />
</extent>
<lines_of_code value="5" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="1" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>SetAbortOnError(bool)</name>
<extent>
<description>definition</description>
<source_reference file="CPPLogger.cpp" line="42" />
</extent>
<extent>
<description>declaration</description>
<source_reference file="CPPLogger.h" line="110" />
</extent>
<lines_of_code value="4" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="4" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>SetIndentLevel(int)</name>
<extent>
<description>definition</description>
<source_reference file="CPPLogger.cpp" line="22" />
</extent>
<extent>
<description>declaration</description>
<source_reference file="CPPLogger.h" line="90" />
</extent>
<lines_of_code value="4" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="4" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>SetIndentSize(int)</name>
<extent>
<description>definition</description>
<source_reference file="CPPLogger.cpp" line="34" />
</extent>
<extent>
<description>declaration</description>
<source_reference file="CPPLogger.h" line="104" />
</extent>
<lines_of_code value="4" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="2" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>SetLogLevel(LogType)</name>
<extent>
<description>definition</description>
<source_reference file="CPPLogger.cpp" line="50" />
</extent>
<extent>
<description>declaration</description>
<source_reference file="CPPLogger.h" line="122" />
</extent>
<lines_of_code value="4" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="4" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>SetLogTarget(const string &amp;)</name>
<extent>
<description>definition</description>
<source_reference file="CPPLogger.cpp" line="46" />
</extent>
<extent>
<description>declaration</description>
<source_reference file="CPPLogger.h" line="116" />
</extent>
<lines_of_code value="4" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="4" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>SetPretext(const string &amp;)</name>
<extent>
<description>definition</description>
<source_reference file="CPPLogger.cpp" line="38" />
</extent>
<extent>
<description>declaration</description>
<source_reference file="CPPLogger.h" line="84" />
</extent>
<lines_of_code value="4" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="2" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>Test()</name>
<extent>
<description>definition</description>
<source_reference file="CPPLogger.cpp" line="155" />
</extent>
<extent>
<description>declaration</description>
<source_reference file="CPPLogger.h" line="133" />
</extent>
<lines_of_code value="28" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="6" level="0" />
<lines_of_code_per_line_of_comment value="4.667" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>TestClearFile()</name>
<extent>
<description>definition</description>
<source_reference file="CPPLogger.cpp" line="320" />
</extent>
<lines_of_code value="7" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>TestIndentLevel()</name>
<extent>
<description>definition</description>
<source_reference file="CPPLogger.cpp" line="191" />
</extent>
<lines_of_code value="27" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="******" level="2" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>TestLogLevel()</name>
<extent>
<description>definition</description>
<source_reference file="CPPLogger.cpp" line="303" />
</extent>
<lines_of_code value="14" level="0" />
<McCabes_cyclomatic_complexity value="3" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>TestLogTarget()</name>
<extent>
<description>definition</description>
<source_reference file="CPPLogger.cpp" line="297" />
</extent>
<lines_of_code value="5" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>TestPretext()</name>
<extent>
<description>definition</description>
<source_reference file="CPPLogger.cpp" line="289" />
</extent>
<lines_of_code value="7" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>TestTags()</name>
<extent>
<description>definition</description>
<source_reference file="CPPLogger.cpp" line="226" />
</extent>
<lines_of_code value="46" level="1" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="7" level="0" />
<lines_of_code_per_line_of_comment value="6.571" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>operator &lt;&lt;(char *)</name>
<extent>
<description>definition</description>
<source_reference file="CPPLogger.cpp" line="91" />
</extent>
<lines_of_code value="4" level="0" />
<McCabes_cyclomatic_complexity value="1" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>operator &lt;&lt;(const char *)</name>
<extent>
<description>definition</description>
<source_reference file="CPPLogger.cpp" line="96" />
</extent>
<lines_of_code value="4" level="0" />
<McCabes_cyclomatic_complexity value="1" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>operator &lt;&lt;(const string &amp;)</name>
<extent>
<description>definition</description>
<source_reference file="CPPLogger.cpp" line="106" />
</extent>
<lines_of_code value="4" level="0" />
<McCabes_cyclomatic_complexity value="1" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>operator &lt;&lt;(string &amp;)</name>
<extent>
<description>definition</description>
<source_reference file="CPPLogger.cpp" line="101" />
</extent>
<lines_of_code value="4" level="0" />
<McCabes_cyclomatic_complexity value="1" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>replaceTags(const string &amp;,string &amp;)</name>
<extent>
<description>definition</description>
<source_reference file="CPPLogger.cpp" line="111" />
</extent>
<lines_of_code value="23" level="0" />
<McCabes_cyclomatic_complexity value="8" level="0" />
<lines_of_comment value="14" level="0" />
<lines_of_code_per_line_of_comment value="1.643" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="0.571" level="0" />
</member_function>
<member_function>
<name>~LogStream()</name>
<extent>
<description>definition</description>
<source_reference file="CPPLogger.cpp" line="77" />
</extent>
<extent>
<description>declaration</description>
<source_reference file="CPPLogger.h" line="145" />
</extent>
<lines_of_code value="13" level="0" />
<McCabes_cyclomatic_complexity value="4" level="0" />
<lines_of_comment value="2" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
</procedural_detail>
<structural_detail>
<module>
<name>LogStream</name>
<client_module>
</client_module>
<supplier_module>
<name>bool</name>
<visible>true</visible>
<concrete>true</concrete>
<extent>
<description>pass by value</description>
<source_reference file="CPPLogger.cpp" line="42" />
</extent>
<extent>
<description>pass by value</description>
<source_reference file="CPPLogger.cpp" line="59" />
</extent>
<extent>
<description>pass by value</description>
<source_reference file="CPPLogger.h" line="110" />
</extent>
<extent>
<description>pass by value</description>
<source_reference file="CPPLogger.h" line="141" />
</extent>
<name>string</name>
<visible>true</visible>
<concrete>false</concrete>
<extent>
<description>pass by reference</description>
<source_reference file="CPPLogger.cpp" line="38" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="CPPLogger.cpp" line="46" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="CPPLogger.cpp" line="59" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="CPPLogger.cpp" line="101" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="CPPLogger.cpp" line="106" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="CPPLogger.cpp" line="111" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="CPPLogger.cpp" line="111" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="CPPLogger.cpp" line="328" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="CPPLogger.h" line="84" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="CPPLogger.h" line="116" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="CPPLogger.h" line="141" />
</extent>
</supplier_module>
</module>
</structural_detail>
</CCCC_Project>
