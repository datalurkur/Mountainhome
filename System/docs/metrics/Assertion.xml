<?xml version="1.0" encoding="utf-8"?>
<!--Detailed report on module Assertion-->
<CCCC_Project>
<module_summary>
<lines_of_code value="159" level="0" />
<lines_of_code_per_member_function value="******" level="0" />
<McCabes_cyclomatic_complexity value="58" level="0" />
<McCabes_cyclomatic_complexity_per_member_function value="******" level="2" />
<lines_of_code value="84" level="0" />
<lines_of_code_per_member_function value="********" level="2" />
<lines_of_code_per_line_of_comment value="1.893" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="0.690" level="0" />
<weighted_methods_per_class_unity value="19" level="0" />
<weighted_methods_per_class_visibility value="3" level="0" />
<depth_of_inheritance_tree value="1" level="0" />
<number_of_children value="0" level="0" />
<coupling_between_objects value="6" level="0" />
<IF4 value="0" level="0" />
<IF4_per_member_function value="********" level="0" />
<IF4_visible value="0" level="0" />
<IF4_visible_per_member_function value="********" level="0" />
<IF4_concrete value="0" level="0" />
<IF4_concrete_per_member_function value="********" level="0" />
</module_summary>
<module_detail>
<description>definition</description>
<source_reference file="Assertion.h" line="105" />
<lines_of_code value="48" level="1" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="76" level="0" />
<lines_of_code_per_line_of_comment value="0.632" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</module_detail>
<procedural_detail>
<member_function>
<name>Assertion()</name>
<extent>
<description>definition</description>
<source_reference file="Assertion.cpp" line="13" />
</extent>
<lines_of_code value="1" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="8" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>checkAssertion(bool,const string &amp;,const string &amp;,const string &amp;,int)</name>
<extent>
<description>definition</description>
<source_reference file="Assertion.cpp" line="27" />
</extent>
<lines_of_code value="20" level="0" />
<McCabes_cyclomatic_complexity value="5" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="******" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="******" level="0" />
</member_function>
<member_function>
<name>checkAssertion(const string &amp;,const T1 &amp;,const T2 &amp;,const string &amp;,const string &amp;,const string &amp;,const string &amp;,int)</name>
<extent>
<description>definition</description>
<source_reference file="Assertion.h" line="260" />
</extent>
<lines_of_code value="24" level="0" />
<McCabes_cyclomatic_complexity value="5" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="******" level="2" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="******" level="0" />
</member_function>
<member_function>
<name>eq(const T1 &amp;,const T2 &amp;)</name>
<extent>
<description>definition</description>
<source_reference file="Assertion.h" line="205" />
</extent>
<lines_of_code value="6" level="0" />
<McCabes_cyclomatic_complexity value="6" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="******" level="2" />
</member_function>
<member_function>
<name>feq(const Real &amp;,const Real &amp;)</name>
<extent>
<description>definition</description>
<source_reference file="Assertion.cpp" line="52" />
</extent>
<lines_of_code value="3" level="0" />
<McCabes_cyclomatic_complexity value="2" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>fge(const Real &amp;,const Real &amp;)</name>
<extent>
<description>definition</description>
<source_reference file="Assertion.cpp" line="64" />
</extent>
<lines_of_code value="3" level="0" />
<McCabes_cyclomatic_complexity value="2" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>fgt(const Real &amp;,const Real &amp;)</name>
<extent>
<description>definition</description>
<source_reference file="Assertion.cpp" line="60" />
</extent>
<lines_of_code value="3" level="0" />
<McCabes_cyclomatic_complexity value="2" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>fle(const Real &amp;,const Real &amp;)</name>
<extent>
<description>definition</description>
<source_reference file="Assertion.cpp" line="72" />
</extent>
<lines_of_code value="3" level="0" />
<McCabes_cyclomatic_complexity value="2" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>flt(const Real &amp;,const Real &amp;)</name>
<extent>
<description>definition</description>
<source_reference file="Assertion.cpp" line="68" />
</extent>
<lines_of_code value="3" level="0" />
<McCabes_cyclomatic_complexity value="2" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>fne(const Real &amp;,const Real &amp;)</name>
<extent>
<description>definition</description>
<source_reference file="Assertion.cpp" line="56" />
</extent>
<lines_of_code value="3" level="0" />
<McCabes_cyclomatic_complexity value="2" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>ge(const T1 &amp;,const T2 &amp;)</name>
<extent>
<description>definition</description>
<source_reference file="Assertion.h" line="232" />
</extent>
<lines_of_code value="6" level="0" />
<McCabes_cyclomatic_complexity value="6" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="******" level="2" />
</member_function>
<member_function>
<name>getTestStats(int &amp;,int &amp;,Real &amp;)</name>
<extent>
<description>definition</description>
<source_reference file="Assertion.cpp" line="20" />
</extent>
<extent>
<description>declaration</description>
<source_reference file="Assertion.h" line="108" />
</extent>
<lines_of_code value="6" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>gt(const T1 &amp;,const T2 &amp;)</name>
<extent>
<description>definition</description>
<source_reference file="Assertion.h" line="223" />
</extent>
<lines_of_code value="6" level="0" />
<McCabes_cyclomatic_complexity value="6" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="******" level="2" />
</member_function>
<member_function>
<name>le(const T1 &amp;,const T2 &amp;)</name>
<extent>
<description>definition</description>
<source_reference file="Assertion.h" line="250" />
</extent>
<lines_of_code value="6" level="0" />
<McCabes_cyclomatic_complexity value="6" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="******" level="2" />
</member_function>
<member_function>
<name>lt(const T1 &amp;,const T2 &amp;)</name>
<extent>
<description>definition</description>
<source_reference file="Assertion.h" line="241" />
</extent>
<lines_of_code value="6" level="0" />
<McCabes_cyclomatic_complexity value="6" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="******" level="2" />
</member_function>
<member_function>
<name>ne(const T1 &amp;,const T2 &amp;)</name>
<extent>
<description>definition</description>
<source_reference file="Assertion.h" line="214" />
</extent>
<lines_of_code value="6" level="0" />
<McCabes_cyclomatic_complexity value="6" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="******" level="2" />
</member_function>
<member_function>
<name>printTestStats()</name>
<extent>
<description>declaration</description>
<source_reference file="Assertion.h" line="109" />
</extent>
<lines_of_code value="1" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>setSoftAbort(bool)</name>
<extent>
<description>definition</description>
<source_reference file="Assertion.cpp" line="16" />
</extent>
<extent>
<description>declaration</description>
<source_reference file="Assertion.h" line="107" />
</extent>
<lines_of_code value="4" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
<member_function>
<name>~Assertion()</name>
<extent>
<description>definition</description>
<source_reference file="Assertion.cpp" line="14" />
</extent>
<lines_of_code value="1" level="0" />
<McCabes_cyclomatic_complexity value="0" level="0" />
<lines_of_comment value="0" level="0" />
<lines_of_code_per_line_of_comment value="------" level="0" />
<McCabes_cyclomatic_complexity_per_line_of_comment value="------" level="0" />
</member_function>
</procedural_detail>
<structural_detail>
<module>
<name>Assertion</name>
<client_module>
</client_module>
<supplier_module>
<name>Real</name>
<visible>true</visible>
<concrete>false</concrete>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.cpp" line="20" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.cpp" line="52" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.cpp" line="52" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.cpp" line="56" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.cpp" line="56" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.cpp" line="60" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.cpp" line="60" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.cpp" line="64" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.cpp" line="64" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.cpp" line="68" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.cpp" line="68" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.cpp" line="72" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.cpp" line="72" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.h" line="108" />
</extent>
<name>Singleton</name>
<visible>true</visible>
<concrete>true</concrete>
<extent>
<description>inheritance</description>
<source_reference file="Assertion.h" line="105" />
</extent>
<name>T1</name>
<visible>true</visible>
<concrete>false</concrete>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.h" line="205" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.h" line="214" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.h" line="223" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.h" line="232" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.h" line="241" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.h" line="250" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.h" line="262" />
</extent>
<name>T2</name>
<visible>true</visible>
<concrete>false</concrete>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.h" line="205" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.h" line="214" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.h" line="223" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.h" line="232" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.h" line="241" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.h" line="250" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.h" line="263" />
</extent>
<name>bool</name>
<visible>true</visible>
<concrete>true</concrete>
<extent>
<description>pass by value</description>
<source_reference file="Assertion.cpp" line="16" />
</extent>
<extent>
<description>pass by value</description>
<source_reference file="Assertion.cpp" line="28" />
</extent>
<extent>
<description>pass by value</description>
<source_reference file="Assertion.h" line="107" />
</extent>
<name>string</name>
<visible>true</visible>
<concrete>false</concrete>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.cpp" line="29" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.cpp" line="30" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.cpp" line="31" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.h" line="261" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.h" line="264" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.h" line="265" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.h" line="266" />
</extent>
<extent>
<description>pass by reference</description>
<source_reference file="Assertion.h" line="267" />
</extent>
</supplier_module>
</module>
</structural_detail>
</CCCC_Project>
